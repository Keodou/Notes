// <auto-generated />
using System;
using Keodou.Notes.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Keodou.Notes.Web.Migrations
{
    [DbContext(typeof(NotesDbContext))]
    [Migration("20230201152414_NewEntity")]
    partial class NewEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Keodou.Notes.Web.Models.Entities.Note", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Head")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("decb6c0d-7369-43a7-ad39-769039b9241d"),
                            Head = "Завтрак",
                            Text = "Приготовить яичницу и сварить кофе",
                            UserId = new Guid("dcda2ef5-4727-4be4-839f-bbc351a755e0")
                        },
                        new
                        {
                            Id = new Guid("921eca58-a972-46bc-8e40-b4236ba0cfba"),
                            Head = "Обед",
                            Text = "Сьесть суп и купить чипсы",
                            UserId = new Guid("dcda2ef5-4727-4be4-839f-bbc351a755e0")
                        },
                        new
                        {
                            Id = new Guid("8f1c9edb-252e-4abb-90c8-5601940d9e8a"),
                            Head = "Резюме",
                            Text = "Составить резюме для поиска вакансии на джуна",
                            UserId = new Guid("845d105e-1943-40af-b7f1-c76ece311183")
                        });
                });

            modelBuilder.Entity("Keodou.Notes.Web.Models.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Keodou.Notes.Web.Models.Entities.Note", b =>
                {
                    b.HasOne("Keodou.Notes.Web.Models.Entities.User", "User")
                        .WithMany("Notes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Keodou.Notes.Web.Models.Entities.User", b =>
                {
                    b.Navigation("Notes");
                });
#pragma warning restore 612, 618
        }
    }
}
